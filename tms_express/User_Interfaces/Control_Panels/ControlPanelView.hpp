// Copyright 2023 Joseph Bellahcen <joeclb@icloud.com>

#ifndef TMS_EXPRESS_USER_INTERFACES_CONTROL_PANELS_CONTROLPANELVIEW_HPP_
#define TMS_EXPRESS_USER_INTERFACES_CONTROL_PANELS_CONTROLPANELVIEW_HPP_

#include <QGridLayout>
#include <QWidget>

#include <string>

namespace tms_express::ui {

/// @brief Abstract interface for titled GUI control panel with parameter grid
class ControlPanelView: public QWidget {
    Q_OBJECT

 public:
    ///////////////////////////////////////////////////////////////////////////
    // Initializers ///////////////////////////////////////////////////////////
    ///////////////////////////////////////////////////////////////////////////

    /// @brief Creates a new Control Panel View for holding parameters
    /// @param title Title to be displayed on top of panel
    /// @param parent Parent Qt widget
    explicit ControlPanelView(const std::string &title,
        QWidget *parent = nullptr);

    ///////////////////////////////////////////////////////////////////////////
    // Virtual Methods ////////////////////////////////////////////////////////
    ///////////////////////////////////////////////////////////////////////////

    /// @brief Resets parameters to default values and states
    virtual void reset() = 0;

    /// @brief Assigns Qt slots and signals to UI elements
    /// @note This function must only be called once
    virtual void configureSlots() = 0;

 public slots:
    ///////////////////////////////////////////////////////////////////////////
    // Qt Slots ///////////////////////////////////////////////////////////////
    ///////////////////////////////////////////////////////////////////////////

    /// @brief Emits Qt signal when user adjusts any parameter
    void stateChanged();

 signals:
    ///////////////////////////////////////////////////////////////////////////
    // Qt Signals /////////////////////////////////////////////////////////////
    ///////////////////////////////////////////////////////////////////////////

    /// @brief Qt signal which prompts re-evaluation of parameters
    void stateChangeSignal();

 protected:
    ///////////////////////////////////////////////////////////////////////////
    // Members ////////////////////////////////////////////////////////////////
    ///////////////////////////////////////////////////////////////////////////

    /// @brief Grid layout for holding parameters
    QGridLayout *grid;
};

};  // namespace tms_express::ui

#endif  // TMS_EXPRESS_USER_INTERFACES_CONTROL_PANELS_CONTROLPANELVIEW_HPP_
